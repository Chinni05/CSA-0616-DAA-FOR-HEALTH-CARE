import math

def distance(p1, p2):
    """Calculate Euclidean distance between two points."""
    return math.sqrt((p1[0] - p2[0])**2 + (p1[1] - p2[1])**2)

def brute_force(points):
    """Find the closest pair of points using brute force."""
    min_dist = float('inf')
    n = len(points)
    for i in range(n):
        for j in range(i + 1, n):
            dist = distance(points[i], points[j])
            if dist < min_dist:
                min_dist = dist
                closest_pair = (points[i], points[j])
    return min_dist, closest_pair

def closest_split_pair(px, py, delta, best_pair):
    """Find the closest split pair."""
    mid_x = px[len(px) // 2][0]
    strip = [p for p in py if mid_x - delta <= p[0] <= mid_x + delta]
    min_dist = delta
    for i in range(len(strip)):
        for j in range(i + 1, min(7, len(strip) - i)):
            p, q = strip[i], strip[i + j]
            dist = distance(p, q)
            if dist < min_dist:
                min_dist = dist
                best_pair = (p, q)
    return min_dist, best_pair

def closest_pair_recursive(px, py):
    """Recursive function to find the closest pair."""
    n = len(px)
    if n <= 3:
        return brute_force(px)
    
    mid = n // 2
    Qx, Rx = px[:mid], px[mid:]
    Qy, Ry = [], []
    midpoint = px[mid][0]
    for p in py:
        if p[0] <= midpoint:
            Qy.append(p)
        else:
            Ry.append(p)
    
    (left_dist, left_pair) = closest_pair_recursive(Qx, Qy)
    (right_dist, right_pair) = closest_pair_recursive(Rx, Ry)

    if left_dist < right_dist:
        delta, best_pair = left_dist, left_pair
    else:
        delta, best_pair = right_dist, right_pair

    (split_dist, split_pair) = closest_split_pair(px, py, delta, best_pair)
    if split_dist < delta:
        return split_dist, split_pair
    else:
        return delta, best_pair

def closest_pair(points):
    """Find the closest pair of points."""
    px = sorted(points, key=lambda x: x[0])
    py = sorted(points, key=lambda x: x[1])
    return closest_pair_recursive(px, py)

# Example usage
points = [(2, 3), (12, 30), (40, 50), (5, 1), (12, 10), (3, 4)]
min_dist, pair = closest_pair(points)
print(f"The closest pair of points is {pair} with a distance of {min_dist:.2f}")
