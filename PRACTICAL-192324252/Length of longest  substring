def longest_substring_length(s):
    char_map = {}  # Dictionary to store the last index of each character
    start = 0  # Starting index of the sliding window
    max_len = 0  # To store the maximum length of substring

    for end in range(len(s)):
        if s[end] in char_map and char_map[s[end]] >= start:
            start = char_map[s[end]] + 1  # Move the start pointer to the right of the last occurrence of s[end]
        char_map[s[end]] = end  # Update the last index of the character
        max_len = max(max_len, end - start + 1)  # Calculate the length of the current window

    return max_len

# Example usage
s = "abcabcbb"
print(f"Length of longest substring without repeating characters: {longest_substring_length(s)}")
